Q. The Nautilus DevOps team is working to deploy some tools in Kubernetes cluster. Some of the tools are licence based so that licence information needs to be stored securely
   within Kubernetes cluster.Therefore, the team wants to utilize Kubernetes secrets to store those secrets. Below you can find more details about the requirements:
   We already have a secret key file blog.txt under /opt location on jump host. Create a generic secret named blog, it should contain the password/license-number present in blog.txt file.
   Also create a pod named secret-nautilus.
   Configure pod's spec as container name should be secret-container-nautilus, image should be debian preferably with latest tag (remember to mention the tag with image). 
   Use sleep command for container so that it remains in running state. Consume the created secret and mount it under /opt/demo within the container.

Sol. 1. Create a secret
           - kubectl create secret generic blog --from-file=blog.txt=/opt/blog.txt
     2. Create a pod manifest
apiVersion: v1
kind: Pod
metadata:
  name: secret-nautilus
spec:
  containers:
  - name: secret-container-nautilus
    image: debian:latest
    command: ["sleep", "infinity"]
    volumeMounts:
    - name: blog-volume
      mountPath: /opt/demo
  volumes:
  - name: blog-volume
    secret:
      secretName: blog

     3. Apply the pod manifest
           - kubectl apply -f pod.yaml
     4. Exec into the container and check the blog.txt
           - kubectl exec -it secret-nautilus -- /bin/bash
           - cat /opt/demo/blog.txt
